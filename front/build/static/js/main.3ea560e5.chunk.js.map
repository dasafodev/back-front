{"version":3,"sources":["components/Job.js","components/Jobs.js","index.js"],"names":["Job","props","useState","name","offer","company","salary","city","Jobs","offers","state","setState","setName","setCompany","setSalary","setCity","show","setShow","handleClose","showWarning","setShowWarning","useEffect","fetch","then","res","json","Container","Row","className","Col","Button","variant","onClick","map","e","i","xs","Modal","onHide","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","onChange","value","target","type","placeholder","Alert","Footer","url","requestOptions","method","headers","body","JSON","stringify","console","log","response","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ea560e5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst Job = (props) => {\nconst [offer] = useState({\n    name: props.offer.name,\n    company: props.offer.company,\n    salary: props.offer.salary,\n    city: props.offer.city,\n  });\n\n  const renderOffer = () => {\n    return (\n      <div>\n        <h2>{offer.name}</h2>\n        <h3>{offer.company}</h3>\n        <h4>{offer.salary}</h4>\n        <h5>{offer.city}</h5>\n        <hr />\n      </div>\n    );\n  };\n\n  return <div>{renderOffer()}</div>;\n}\n\n\n\nexport default Job;","import React, { useState, useEffect } from \"react\";\nimport Job from \"./Job\";\nimport { Button, Container, Row, Col, Modal, Form , Alert} from \"react-bootstrap\";\n\nexport const Jobs = () => {\n  const [state, setState] = useState({ offers: [] });\n\n  const [name, setName] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [salary, setSalary] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n\n  const [showWarning, setShowWarning] = useState(false)\n\n  const handleCreate = () => {\n    if(name!==\"\" && company!==\"\" && salary!==\"\" && city!==\"\"  ){\n    setShow(false);\n    const url = \"/offers\";\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        name: name,\n        company: company,\n        salary: salary,\n        city: city,\n      }),\n    };\n    console.log(requestOptions);\n    fetch(url, requestOptions).then((response) => {\n      fetch(url)\n        .then((res) => {\n          return res.json();\n        })\n        .then((offers) => {\n          setState({ offers });\n        });\n      response.json();\n    });\n  }else{\n    setShowWarning(true)\n  }\n  };\n  const handleShow = () => {\n    setShow(true);\n  };\n\n  useEffect(() => {\n    const url = \"/offers\";\n    fetch(url)\n      .then((res) => {\n        return res.json();\n      })\n      .then((offers) => {\n        setState({ offers });\n      });\n  }, []);\n\n  return (\n    <>\n      <Container>\n        <Row className=\"mb-4 mt-4\">\n          <Col>\n            <Button variant=\"primary\" onClick={handleShow}>\n              Crear oferta\n            </Button>\n            <br />\n          </Col>\n        </Row>\n        <Row>\n          {state.offers.map((e, i) => (\n            <Col xs={5} className=\"m-2\">\n              <Job key={i} offer={e} />\n            </Col>\n          ))}\n        </Row>\n      </Container>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Crear oferta</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Nombre</Form.Label>\n            <Form.Control\n              onChange={(value) => setName(value.target.value)}\n              type=\"text\"\n              placeholder=\"Frontend Developer\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Compa√±ia</Form.Label>\n            <Form.Control\n              onChange={(value) => setCompany(value.target.value)}\n              type=\"text\"\n              placeholder=\"Apple\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Salario</Form.Label>\n            <Form.Control\n              onChange={(value) => setSalary(value.target.value)}\n              type=\"text\"\n              placeholder=\"2200 USD\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Ciudad</Form.Label>\n            <Form.Control\n              onChange={(value) => setCity(value.target.value)}\n              type=\"text\"\n              placeholder=\"Remoto\"\n            />\n          </Form.Group>\n          <Alert show={showWarning} variant=\"danger\" >Rellene todos los campos</Alert>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Cancelar\n          </Button>\n          <Button variant=\"primary\" onClick={handleCreate}>\n            Crear\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default Jobs;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Jobs from \"./components/Jobs\";\n\nReactDOM.render(<Jobs/>, document.getElementById(\"root\"));"],"sourceRoot":""}